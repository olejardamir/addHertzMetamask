{"ast":null,"code":"import _classCallCheck from\"/home/damir/addHertzMetamask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/damir/addHertzMetamask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/damir/addHertzMetamask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/damir/addHertzMetamask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/damir/addHertzMetamask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import switchNetwork from'./switch-network.jpg';var SwitchNetworkNotice=/*#__PURE__*/function(_Component){_inherits(SwitchNetworkNotice,_Component);function SwitchNetworkNotice(){_classCallCheck(this,SwitchNetworkNotice);return _possibleConstructorReturn(this,_getPrototypeOf(SwitchNetworkNotice).apply(this,arguments));}_createClass(SwitchNetworkNotice,[{key:\"render\",value:function render(){var _this$props=this.props,net=_this$props.net,tokenNet=_this$props.tokenNet;return React.createElement(\"div\",null,React.createElement(\"h1\",null,\"Add Token\"),React.createElement(\"h2\",null,\"Wrong Network Detected\"),React.createElement(\"p\",null,\"You have \",this.nameForNetwork(net),\" selected, but this token requires \",this.nameForNetwork(tokenNet),\". Please switch the current network in your web3 client.\"),React.createElement(\"p\",null,\"You can switch your current network in MetaMask like this:\"),React.createElement(\"img\",{src:switchNetwork,alt:\"Network can be switched in the MetaMask network menu in the top right hand corner.\"}));}},{key:\"nameForNetwork\",value:function nameForNetwork(network){var name='';switch(network){case'1':// main net\nname='The Main Ethereum Network';break;case'2':// legacy ropsten test net\nname='The OLD Ropsten Test Network';break;case'3':// ropsten test net\nname='The Ropsten Test Network';break;case'4':// rinkeby test net\nname='The Rinkeby Test Network';break;case'42':// kovan test net\nname='The Kovan Test Network';break;default:name=\"Network #\".concat(network);}return name;}}]);return SwitchNetworkNotice;}(Component);export default SwitchNetworkNotice;","map":{"version":3,"sources":["/home/damir/addHertzMetamask/src/SwitchNetworkNotice.jsx"],"names":["React","Component","switchNetwork","SwitchNetworkNotice","props","net","tokenNet","nameForNetwork","network","name"],"mappings":"6uBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,aAAP,KAA0B,sBAA1B,C,GAEMC,CAAAA,mB,iUACM,iBACgB,KAAKC,KADrB,CACDC,GADC,aACDA,GADC,CACIC,QADJ,aACIA,QADJ,CAGR,MACE,gCACE,0CADF,CAEE,uDAFF,CAGE,yCAAa,KAAKC,cAAL,CAAoBF,GAApB,CAAb,uCAA0E,KAAKE,cAAL,CAAoBD,QAApB,CAA1E,4DAHF,CAIE,0FAJF,CAKE,2BAAK,GAAG,CAAEJ,aAAV,CAAyB,GAAG,CAAC,oFAA7B,EALF,CADF,CASD,C,sDAEeM,O,CAAS,CACvB,GAAIC,CAAAA,IAAI,CAAG,EAAX,CACA,OAAQD,OAAR,EACE,IAAK,GAAL,CAAU;AACRC,IAAI,CAAG,2BAAP,CACA,MACF,IAAK,GAAL,CAAU;AACRA,IAAI,CAAG,8BAAP,CACA,MACF,IAAK,GAAL,CAAU;AACRA,IAAI,CAAG,0BAAP,CACA,MACF,IAAK,GAAL,CAAU;AACRA,IAAI,CAAG,0BAAP,CACA,MACF,IAAK,IAAL,CAAW;AACTA,IAAI,CAAG,wBAAP,CACA,MACF,QACEA,IAAI,oBAAeD,OAAf,CAAJ,CAjBJ,CAmBA,MAAOC,CAAAA,IAAP,CACD,C,iCArC+BR,S,EA0ClC,cAAeE,CAAAA,mBAAf","sourcesContent":["import React, { Component } from 'react';\nimport switchNetwork from './switch-network.jpg';\n\nclass SwitchNetworkNotice extends Component {\n  render () {\n    const {net, tokenNet} = this.props\n\n    return (\n      <div>\n        <h1>Add Token</h1>\n        <h2>Wrong Network Detected</h2>\n        <p>You have {this.nameForNetwork(net)} selected, but this token requires {this.nameForNetwork(tokenNet)}. Please switch the current network in your web3 client.</p>\n        <p>You can switch your current network in MetaMask like this:</p>\n        <img src={switchNetwork} alt=\"Network can be switched in the MetaMask network menu in the top right hand corner.\"/>\n      </div>\n    )\n  }\n\n  nameForNetwork (network) {\n    let name = ''\n    switch (network) {\n      case '1': // main net\n        name = 'The Main Ethereum Network'\n        break\n      case '2': // legacy ropsten test net\n        name = 'The OLD Ropsten Test Network'\n        break\n      case '3': // ropsten test net\n        name = 'The Ropsten Test Network'\n        break\n      case '4': // rinkeby test net\n        name = 'The Rinkeby Test Network'\n        break\n      case '42': // kovan test net\n        name = 'The Kovan Test Network'\n        break\n      default:\n        name = `Network #${network}`\n    }\n    return name\n  }\n}\n\n\n\nexport default SwitchNetworkNotice;\n\n"]},"metadata":{},"sourceType":"module"}